CREATE TABLE test (
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    value VARCHAR(255) NOT NULL,
    PRIMARY KEY (id)
);

INSERT INTO test (name, value) VALUES
('foo', 'bar'),
('bar', 'baz'),
('123a', 'bar'),
('123', 'bar');

CREATE TABLE test_charset (
id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
field$ VARCHAR(255) NOT NULL,
field_ VARCHAR(255) NOT NULL,
PRIMARY KEY (id)
);

INSERT INTO test_charset (field$, field_) VALUES
('foo', 'bar'),
('bar', 'baz');

CREATE TABLE test_audit_trail (
    id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    test_id INT NOT NULL,
    test_value_old VARCHAR(255) NOT NULL,
    test_value_new VARCHAR(255) NOT NULL,
    changed TIMESTAMP,
    PRIMARY KEY (id)
);

CREATE VIEW test_view
AS
SELECT
name AS v_name,
value AS v_value
FROM
test;

CREATE TRIGGER after_test_update
AFTER UPDATE ON test
REFERENCING NEW AS N OLD AS O
FOR EACH ROW
BEGIN ATOMIC
INSERT INTO test_audut_trail(test_id, test_value_old, test_value_new, changed)
VALUES(O.id, O.value, N.value, CURRENT TIMESTAMP);
END
